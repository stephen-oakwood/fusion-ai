// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Part interface {
	IsPart()
}

type ProcessingResult interface {
	IsProcessingResult()
}

type AgentResponse struct {
	ProcessingResult ProcessingResult `json:"processingResult"`
}

type Artifact struct {
	ArtifactID  string  `json:"artifactId"`
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	Parts       []Part  `json:"parts"`
}

type FilePart struct {
	Name     string  `json:"name"`
	MimeType string  `json:"mimeType"`
	Bytes    *string `json:"bytes,omitempty"`
	URI      *string `json:"uri,omitempty"`
}

func (FilePart) IsPart() {}

type Message struct {
	MessageID string `json:"messageId"`
	Role      string `json:"role"`
	Parts     []Part `json:"parts"`
}

type MessageInput struct {
	ContextID *string `json:"contextId,omitempty"`
	MessageID *string `json:"messageId,omitempty"`
	Text      string  `json:"text"`
}

type Query struct {
}

type Subscription struct {
}

type TaskArtifactUpdate struct {
	TaskID    *string   `json:"taskId,omitempty"`
	ContextID *string   `json:"contextId,omitempty"`
	Artifact  *Artifact `json:"artifact,omitempty"`
}

func (TaskArtifactUpdate) IsProcessingResult() {}

type TaskStatus struct {
	State     string   `json:"state"`
	Message   *Message `json:"message,omitempty"`
	Timestamp *string  `json:"timestamp,omitempty"`
}

type TaskStatusUpdate struct {
	TaskID    *string     `json:"taskId,omitempty"`
	ContextID *string     `json:"contextId,omitempty"`
	Status    *TaskStatus `json:"status,omitempty"`
}

func (TaskStatusUpdate) IsProcessingResult() {}

type TextPart struct {
	Text string `json:"text"`
}

func (TextPart) IsPart() {}
